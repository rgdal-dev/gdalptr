// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// xptr_GDALOpen
SEXP xptr_GDALOpen(CharacterVector dsn, IntegerVector sds);
RcppExport SEXP _gdalptr_xptr_GDALOpen(SEXP dsnSEXP, SEXP sdsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type dsn(dsnSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type sds(sdsSEXP);
    rcpp_result_gen = Rcpp::wrap(xptr_GDALOpen(dsn, sds));
    return rcpp_result_gen;
END_RCPP
}
// xptr_GDALGetRasterSize
SEXP xptr_GDALGetRasterSize(SEXP xp);
RcppExport SEXP _gdalptr_xptr_GDALGetRasterSize(SEXP xpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xp(xpSEXP);
    rcpp_result_gen = Rcpp::wrap(xptr_GDALGetRasterSize(xp));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP GdalPtrDataset(void);
RcppExport SEXP GdalPtrGetRasterSize(void *);
RcppExport SEXP GdalPtrOpen(void *, void *);
RcppExport SEXP GdalVersion(void);
RcppExport SEXP GdalVSIReadDirRecursive(void *);

static const R_CallMethodDef CallEntries[] = {
    {"_gdalptr_xptr_GDALOpen", (DL_FUNC) &_gdalptr_xptr_GDALOpen, 2},
    {"_gdalptr_xptr_GDALGetRasterSize", (DL_FUNC) &_gdalptr_xptr_GDALGetRasterSize, 1},
    {"GdalPtrDataset",          (DL_FUNC) &GdalPtrDataset,          0},
    {"GdalPtrGetRasterSize",    (DL_FUNC) &GdalPtrGetRasterSize,    1},
    {"GdalPtrOpen",             (DL_FUNC) &GdalPtrOpen,             2},
    {"GdalVersion",             (DL_FUNC) &GdalVersion,             0},
    {"GdalVSIReadDirRecursive", (DL_FUNC) &GdalVSIReadDirRecursive, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_gdalptr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
